=======
 Notes
=======
:Date: $Date: 2001/10/18 04:10:20 $
:Revision: $Revision: 1.20 $


To Do
=====

- Document!

- Implement a parser according to the markup implementation plan.

- Create a standalone reStructuredText -> HTML/XML converter (stdin ->
  stdout filter). (Flesh out tools/quicktest.py.)

- Allow very long titles (on two or more lines)?

- And for the sake of completeness, should definition list terms be
  allowed to be very long (two or more lines) also?

- Allow hyperlink references to targets in other documents? Not in an
  HTML-centric way, though (it's trivial to say
  http://www.whatever.com/doc#name, and useless in non-HTML contexts).
  XLink/XPointer? ``.. baseref::``? See Doc-SIG 2001-08-10.

- Interpret backslash-escaped spaces as non-breaking spaces? Escaped
  newlines as forced-breaks?

- Implement the header row separator modification to table.el. (Wrote
  to Takaaki Ota & the table.el mailing list on 2001-08-12,
  suggesting support for '=====' header rows. On 2001-08-17 he
  replied, saying he'd put it on his to-do list, but don't hold your
  breath.)

- Tony says inline markup rule 7 could do with a *little* more
  exposition in the spec, to make clear what is going on for people
  with head colds.

- To avoid mistakenly marking up text like ``signal:noise`` as URIs,
  limit standalone hyperlink URI recognition to known schemes, as per
  http://www.w3.org/Addressing/schemes.html.


Or Not To Do?
=============

This is the realm of the possible but questionably probable. These
ideas are kept here as a record of what has been proposed, for
posterity and in case any of them prove to be useful.


Compound Enumerated Lists
-------------------------

(A future revision of this specification may allow for compound
enumerators, such as '1.a.' or '1(a)', to allow for nested enumerated
lists without indentation.)


Auto-Numbered Enumerated Lists
------------------------------

Add these? Example::

    #. Item 1.
    #. Item 2.
    #. Item 3.

Arabic numerals only, or any sequence if first initialized? For
example::

    a) Item a.
    #) Item b.
    #) Item c.


Two-For-One Literal Blocks
--------------------------

[Aside: One possible variation is for meta-documentation (perhaps an
extension?): use triple-colons (':::') or a directive ('..
literal-parsed::') to indicate 'take the following literal block, mark
it up as a literal block, then copy it and mark it up as if it weren't
a literal block'.  The implementation may insert text in-between, such
as 'Marked up as:', or may alter the formatting (different font, set
in a colored box, whatever).]


Sloppy Indentation of List Items
--------------------------------

Perhaps the indentation shouldn't be so strict. Currently, this is
required::

    1. First line,
       second line.

Anything wrong with this? ::

    1. First line,
     second line.

Especially for option lists & field lists, this could be handy::

    --longopt  Description,
               second line.
    --verylongopt  Description,
               second line.
    --very_long_option_name, --another_long_option, -s
               Description,
               second line.

(Currently, the second option's second line has to be lined up with
the first; and the third option would be very difficult indeed.)

Problem?

    1. First para.

       Block quote. (no good: requires some indent relative to first
       para)

     Second Para.

    2. Have to carefully define where the literal block ends::

         Literal block

       Literal block?

Hmm... Non-strict indentation isn't such a good idea.


Lazy Indentation of List Items
------------------------------

Another approach: Going back to the first draft of reStructuredText
(2000-11-27 post to Doc-SIG):

    - This is the fourth item of the main list (no blank line above).
    The second line of this item is not indented relative to the
    bullet, which precludes it from having a second paragraph.

Change that to *require* a blank line above and below, to reduce
ambiguity. This "loosening" may be added later, once the parser's been
nailed down. However, a serious drawback of this approach is to limit
the content of each list item to a single paragraph. Garth Kidd is
attempting to work out a consistent set of rules for "lazy
indentation".


David's Idea for Lazy Indentation
`````````````````````````````````

Consider a paragraph in a word processor. It is a single logical line
of text which ends with a newline, soft-wrapped arbitrarily at the
right edge of the page or screen. We can think of a plaintext
paragraph in the same way, as a single logical line of text, ending
with two newlines (a blank line) instead of one, and which may contain
arbitrary line breaks (newlines) where it was accidentally
hard-wrapped by an application. We can compensate for the accidental
hard-wrapping by "unwrapping" every unindented second and subsequent
line. The indentation of the first line of a paragraph or list item
would determine the indentation for the entire element. Blank lines
would be required between list items when using lazy indentation.

The following example shows the lazy indentation of multiple body
elements::

    - This is the first paragraph
    of the first list item.

      Here is the second paragraph
    of the first list item.

    - This is the first paragraph
    of the second list item.

      Here is the second paragraph
    of the second list item.

A more complex example shows the limitations of lazy indentation::

    - This is the first paragraph
    of the first list item.

      Next is a definition list item:

      Term
          Definition. The indentation of the term is
    required, as is the indentation of the definition's
    first line.

          When the definition extends to more than
    one line, lazy indentation may occur. (This is the second
    paragraph of the definition.)

    - This is the first paragraph
    of the second list item.

      - Here is the first paragraph of
    the first item of a nested list.

      So this paragraph would be outside of the nested list,
    but inside the second list item of the outer list.

    But this paragraph is not part of the list at all.

And the ambiguity remains::

    - Look at the hyphen at the beginning of the next line
    - is it a second list item marker, or a dash in the text?

    Similarly, we may want to refer to numbers inside enumerated
    lists:

    1. How many socks in a pair? There are
    2. How many pants in a pair? Exactly
    1. Go figure.

Literal blocks and block quotes would still require consistent
indentation for all their lines. For block quotes, we might be able to
get away with only requiring that the first line of each contained
element be indented. For example::

    Here's a paragraph.

        This is a paragraph inside a block quote.
    Second and subsequent lines need not be indented at all.

        - A bullet list inside
    the block quote.

          Second paragraph of the
    bullet list inside the block quote.

Although feasible, this form of lazy indentation has problems. The
document structure and hierarchy is not obvious from the indentation,
making the source plaintext difficult to read. This will also make
keeping track of the indentation while writing difficult and
error-prone. However, these problems may be acceptable for Wikis and
email mode, where we may be able to rely on less complex structure
(few nested lists, for example).


Horizontal Rules
----------------

Wolfgang Lipp suggested adding horizontal rules (HTML <HR>) to the
syntax.  A line of punctuation with a blank line before and after::

    Para.

    ------------------------------------------------------------

    Para.

The problem is, HRs are purely presentational.  What structural
significance do they have?

Hmm. Stories are often broken up into "segments" with vertical
whitespace, sometimes with a horizontal line or a group of symbols
(e.g. three widely-separated asterisks). This could be modeled by
horizontal rules.

HRs could be allowed to be indented without generating a block quote::

    Para.

        --------

    Para.

Tony Ibbs' mention of HRs on 2001-10-16 triggered an idea from the
nether regions of my cerebrum, relating to constructs commonly seen in
novels and short fiction.  Rummaging around in my copy of The Chicago
Manual of Style, 14th ed., I found this confirmation (sect. 1.80):

    Instead of subheads, extra space or a type ornament between
    paragraphs may be used to mark text divisions or to signal
    changes in subject or emphasis.

In other words, "anonymous sections"! *There's* the structural
significance. An HTML Writer could render these text divisions as
horizontal rules if it likes.


..
   Local Variables:
   mode: indented-text
   indent-tabs-mode: nil
   sentence-end-double-space: t
   fill-column: 70
   End:
