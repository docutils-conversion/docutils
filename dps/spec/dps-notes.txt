=======
 Notes
=======
Date: $Date: 2001/08/01 02:46:47 $
Revision: $Revision: 1.2 $


To Do
=====

- Complete PEP 258 DPS Generic Implementation Details.

  - Fill in the blanks in API details.

- Rework PEP 257, separating style from spec wrt DPS. See Doc-SIG
  from 2001-06-19/20.

- Document!

  - Modules.
  - DTD element semantics.

- Get cracking on the DPS itself!

- Add layout component to framework? Or part of the formatter?

- Add validation? See http://pytrex.sf.net, RELAX NG.


I/O APIs
========

Can we use codecs for this?  Input to parser and output from formatter
are strings, but the intermediate data structure is a DOM tree.


Docstring Extractor
===================

We need code that scans a parsed Python module, and returns an ordered
tree containing the names, docstrings (including additional
docstrings), and additional info (in parentheses below) of all of the
following objects:

- packages
- modules
- module attributes (+ values)
- classes (+ inheritance)
- class attributes (+ values)
- instance attributes (+ values)
- methods (+ formal parameters)
- functions (+ formal parameters)

In order to evaluate interpreted text cross-references, namespaces for
each of the above will also be required.


Local Variables:
mode: indented-text
indent-tabs-mode: nil
sentence-end-double-space: t
fill-column: 70
End:
