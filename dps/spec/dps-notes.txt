=======
 Notes
=======
Date: $Date: 2001/08/06 04:32:20 $
Revision: $Revision: 1.4 $


To Do
=====

- Complete PEP 258 DPS Generic Implementation Details.

  - Fill in the blanks in API details.

- Rework PEP 257, separating style from spec from tools, wrt DPS. See
  Doc-SIG from 2001-06-19/20.

- PEP 256: Draw the framework diagram properly as a graphic (once PEPs
  support inline graphics !-).

- Document!

  - Modules.
  - DTD element semantics.

- Get cracking on the DPS itself!

- Add layout component to framework? Or part of the formatter?

- Add validation? See http://pytrex.sourceforge.net, RELAX NG.

- Incorporate "modes", using Tony Ibbs' 2001-08-03 Doc-SIG post
  'Suggestions for reST "modes"' as a base.

Error Handling
==============

Tibs pointed out that the four levels correspond to `VMS severity levels`_:

+-------+-------+--------------+------------------------------------+
| DPS   | VMS   |              |                                    |
| Level | Value | Severity     | Response                           |
+=======+=======+==============+====================================+
| n/a   | 1     | Success      | Execution continues, expected      |
|       |       |              | results                            |
+-------+-------+--------------+------------------------------------+
| 0     | 3     | Information  | Execution continues, informational |
|       |       |              | message displayed                  |
+-------+-------+--------------+------------------------------------+
| 1     | 0     | Warning      | Execution continues, unpredictable |
|       |       |              | results                            |
+-------+-------+--------------+------------------------------------+
| 2     | 2     | Error        | Execution continues, erroneous     |
|       |       |              | results                            |
+-------+-------+--------------+------------------------------------+
| 3     | 4     | Severe error | Execution terminates, no output    |
+-------+-------+--------------+------------------------------------+

.. _VMS severity levels:
   http://www.openvms.compaq.com:8000/73final/5841/5841pro_027.html#error_cond_severity

I/O APIs
========

Can we use codecs for this?  Input to parser and output from formatter
are strings, but the intermediate data structure is a DOM tree.


Docstring Extractor
===================

We need code that scans a parsed Python module, and returns an ordered
tree containing the names, docstrings (including additional
docstrings), and additional info (in parentheses below) of all of the
following objects:

- packages
- modules
- module attributes (+ values)
- classes (+ inheritance)
- class attributes (+ values)
- instance attributes (+ values)
- methods (+ formal parameters)
- functions (+ formal parameters)

In order to evaluate interpreted text cross-references, namespaces for
each of the above will also be required.


Local Variables:
mode: indented-text
indent-tabs-mode: nil
sentence-end-double-space: t
fill-column: 70
End:
